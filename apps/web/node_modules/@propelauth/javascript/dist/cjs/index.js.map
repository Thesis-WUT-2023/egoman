{"version":3,"file":"index.js","sources":["../../src/access_helper.ts","../../src/org_helper.ts","../../src/user.ts","../../src/api.ts","../../src/helpers.ts","../../src/client.ts","../../src/cookies.ts","../../node_modules/js-cookie/dist/js.cookie.mjs","../../src/org.ts"],"sourcesContent":["import {OrgIdToOrgMemberInfo} from \"./org\";\n\nexport type AccessHelper = {\n    isRole: (orgId: string, role: string) => boolean\n    isAtLeastRole: (orgId: string, role: string) => boolean\n    hasPermission: (orgId: string, permission: string) => boolean\n    hasAllPermissions: (orgId: string, permissions: string[]) => boolean\n    getAccessHelperWithOrgId: (orgId: string) => AccessHelperWithOrg\n}\n\nexport type AccessHelperWithOrg = {\n    isRole: (role: string) => boolean\n    isAtLeastRole: (role: string) => boolean\n    hasPermission: (permission: string) => boolean\n    hasAllPermissions: (permissions: string[]) => boolean\n}\n\nexport function getAccessHelper(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo,\n): AccessHelper {\n    function isRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userAssignedRole === role\n    }\n    \n    function isAtLeastRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userInheritedRolesPlusCurrentRole.includes(role)\n    }\n\n    function hasPermission(orgId: string, permission: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userPermissions.includes(permission)\n    }\n\n    function hasAllPermissions(orgId: string, permissions: string[]): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return permissions.every(permission => orgMemberInfo.userPermissions.includes(permission))\n    }\n\n    function getAccessHelperWithOrgId(orgId: string): AccessHelperWithOrg {\n        return {\n            isRole(role: string): boolean {\n                return isRole(orgId, role)\n            },\n            isAtLeastRole(role: string): boolean {\n                return isAtLeastRole(orgId, role)\n            },\n            hasPermission(permission: string): boolean {\n                return hasPermission(orgId, permission)\n            },\n            hasAllPermissions(permissions: string[]): boolean {\n                return hasAllPermissions(orgId, permissions)\n            },\n        }\n    }\n    \n    return {\n        isRole,\n        isAtLeastRole,\n        hasPermission,\n        hasAllPermissions,\n        getAccessHelperWithOrgId,\n    }\n}\n","import {OrgIdToOrgMemberInfo, OrgMemberInfo} from \"./org\";\n\nexport type OrgHelper = {\n    getOrgs: () => OrgMemberInfo[]\n    getOrgIds: () => string[]\n    getOrg: (orgId: string) => OrgMemberInfo | undefined\n    getOrgByName: (orgName: string) => OrgMemberInfo | undefined\n}\n\nexport function getOrgHelper(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo,\n): OrgHelper {\n    return {\n        getOrg(orgId: string): OrgMemberInfo | undefined {\n            if (orgIdToOrgMemberInfo.hasOwnProperty(orgId)) {\n                return orgIdToOrgMemberInfo[orgId]\n            } else {\n                return undefined\n            }\n        },\n        getOrgIds(): string[] {\n            return Object.keys(orgIdToOrgMemberInfo)\n        },\n        getOrgs(): OrgMemberInfo[] {\n            return Object.values(orgIdToOrgMemberInfo)\n        },\n        getOrgByName(orgName: string): OrgMemberInfo | undefined {\n            for (const orgMemberInfo of Object.values(orgIdToOrgMemberInfo)) {\n                if (orgMemberInfo.orgName === orgName || orgMemberInfo.urlSafeOrgName === orgName) {\n                    return orgMemberInfo\n                }\n            }\n            return undefined\n        },\n    }\n}","import { OrgIdToOrgMemberInfo } from \"./org\"\n\nexport type UserProperties = { [key: string]: unknown }\n\nexport interface UserFields {\n    userId: string\n    email: string\n    createdAt: number\n    firstName?: string\n    lastName?: string\n    username?: string\n    properties?: UserProperties\n    pictureUrl?: string\n    hasPassword?: boolean\n    hasMfaEnabled?: boolean\n    canCreateOrgs?: boolean\n    legacyUserId?: string\n    impersonatorUserId?: string\n}\n\nexport class UserClass {\n    public userId: string\n    public orgIdToUserOrgInfo?: OrgIdToOrgMemberInfoClass\n\n    // Metadata about the user\n    public email: string\n    public createdAt: number\n    public firstName?: string\n    public lastName?: string\n    public username?: string\n    public properties?: UserProperties\n    public pictureUrl?: string\n    public hasPassword?: boolean\n    public hasMfaEnabled?: boolean\n    public canCreateOrgs?: boolean\n\n    // If you used our migration APIs to migrate this user from a different system,\n    // this is their original ID from that system.\n    public legacyUserId?: string\n    public impersonatorUserId?: string\n\n    constructor(userFields: UserFields, orgIdToUserOrgInfo?: OrgIdToOrgMemberInfoClass) {\n        this.userId = userFields.userId\n        this.orgIdToUserOrgInfo = orgIdToUserOrgInfo\n\n        this.email = userFields.email\n        this.firstName = userFields.firstName\n        this.lastName = userFields.lastName\n        this.username = userFields.username\n        this.createdAt = userFields.createdAt\n        this.pictureUrl = userFields.pictureUrl\n        this.hasPassword = userFields.hasPassword\n        this.hasMfaEnabled = userFields.hasMfaEnabled\n        this.canCreateOrgs = userFields.canCreateOrgs\n\n        this.legacyUserId = userFields.legacyUserId\n        this.impersonatorUserId = userFields.impersonatorUserId\n        this.properties = userFields.properties\n    }\n\n    public getOrg(orgId: string): OrgMemberInfoClass | undefined {\n        if (!this.orgIdToUserOrgInfo) {\n            return undefined\n        }\n\n        return this.orgIdToUserOrgInfo[orgId]\n    }\n\n    public getOrgByName(orgName: string): OrgMemberInfoClass | undefined {\n        if (!this.orgIdToUserOrgInfo) {\n            return undefined\n        }\n\n        const urlSafeOrgName = orgName.toLowerCase().replace(/ /g, \"-\")\n        for (const orgId in this.orgIdToUserOrgInfo) {\n            const orgMemberInfo = this.orgIdToUserOrgInfo[orgId]\n            if (orgMemberInfo?.urlSafeOrgName === urlSafeOrgName) {\n                return orgMemberInfo\n            }\n        }\n\n        return undefined\n    }\n\n    public getUserProperty(key: string): unknown | undefined {\n        if (!this.properties) {\n            return undefined\n        }\n\n        return this.properties[key]\n    }\n\n    public getOrgs(): OrgMemberInfoClass[] {\n        if (!this.orgIdToUserOrgInfo) {\n            return []\n        }\n\n        return Object.values(this.orgIdToUserOrgInfo)\n    }\n\n    public isImpersonating(): boolean {\n        return !!this.impersonatorUserId\n    }\n\n    public isRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.isRole(role)\n    }\n\n    public isAtLeastRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.isAtLeastRole(role)\n    }\n\n    public hasPermission(orgId: string, permission: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.hasPermission(permission)\n    }\n\n    public hasAllPermissions(orgId: string, permissions: string[]): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.hasAllPermissions(permissions)\n    }\n\n    public static fromJSON(json: string): UserClass {\n        const obj = JSON.parse(json)\n        const orgIdToUserOrgInfo: OrgIdToOrgMemberInfoClass = {}\n        for (const orgId in obj.orgIdToUserOrgInfo) {\n            orgIdToUserOrgInfo[orgId] = OrgMemberInfoClass.fromJSON(JSON.stringify(obj.orgIdToUserOrgInfo[orgId]))\n        }\n        try {\n            return new UserClass(\n                {\n                    userId: obj.userId,\n                    email: obj.email,\n                    createdAt: obj.createdAt,\n                    firstName: obj.firstName,\n                    lastName: obj.lastName,\n                    username: obj.username,\n                    legacyUserId: obj.legacyUserId,\n                    impersonatorUserId: obj.impersonatorUserId,\n                    properties: obj.properties,\n                    pictureUrl: obj.pictureUrl,\n                    hasPassword: obj.hasPassword,\n                    hasMfaEnabled: obj.hasMfaEnabled,\n                    canCreateOrgs: obj.canCreateOrgs,\n                },\n                orgIdToUserOrgInfo\n            )\n        } catch (e) {\n            console.error(\"Unable to parse User. Make sure the JSON string is a stringified `UserClass` type.\", e)\n            throw e\n        }\n    }\n}\n\nexport interface OrgIdToOrgMemberInfoClass {\n    [orgId: string]: OrgMemberInfoClass\n}\n\nexport class OrgMemberInfoClass {\n    public orgId: string\n    public orgName: string\n    public orgMetadata: { [key: string]: any }\n    public urlSafeOrgName: string\n\n    public userAssignedRole: string\n    public userInheritedRolesPlusCurrentRole: string[]\n    public userPermissions: string[]\n\n    constructor(\n        orgId: string,\n        orgName: string,\n        orgMetadata: { [key: string]: any },\n        urlSafeOrgName: string,\n        userAssignedRole: string,\n        userInheritedRolesPlusCurrentRole: string[],\n        userPermissions: string[]\n    ) {\n        this.orgId = orgId\n        this.orgName = orgName\n        this.orgMetadata = orgMetadata\n        this.urlSafeOrgName = urlSafeOrgName\n\n        this.userAssignedRole = userAssignedRole\n        this.userInheritedRolesPlusCurrentRole = userInheritedRolesPlusCurrentRole\n        this.userPermissions = userPermissions\n    }\n\n    // validation methods\n    public isRole(role: string): boolean {\n        return this.userAssignedRole === role\n    }\n\n    public isAtLeastRole(role: string): boolean {\n        return this.userInheritedRolesPlusCurrentRole.includes(role)\n    }\n\n    public hasPermission(permission: string): boolean {\n        return this.userPermissions.includes(permission)\n    }\n\n    public hasAllPermissions(permissions: string[]): boolean {\n        return permissions.every((permission) => this.hasPermission(permission))\n    }\n\n    public static fromJSON(json: string): OrgMemberInfoClass {\n        const obj = JSON.parse(json)\n        try {\n            return new OrgMemberInfoClass(\n                obj.orgId,\n                obj.orgName,\n                obj.orgMetadata,\n                obj.urlSafeOrgName,\n                obj.userAssignedRole,\n                obj.userInheritedRolesPlusCurrentRole,\n                obj.userPermissions\n            )\n        } catch (e) {\n            console.error(\n                \"Unable to parse UserOrgInfo. Make sure the JSON string is a stringified `UserOrgInfo` type.\",\n                e\n            )\n            throw e\n        }\n    }\n}\n\nexport function convertOrgIdToOrgMemberInfo(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo | undefined\n): OrgIdToOrgMemberInfoClass | undefined {\n    if (orgIdToOrgMemberInfo === undefined) {\n        return undefined\n    }\n    const orgIdToUserOrgInfo: OrgIdToOrgMemberInfoClass = {}\n    for (const orgMemberInfo of Object.values(orgIdToOrgMemberInfo)) {\n        orgIdToUserOrgInfo[orgMemberInfo.orgId] = new OrgMemberInfoClass(\n            orgMemberInfo.orgId,\n            orgMemberInfo.orgName,\n            {},\n            orgMemberInfo.urlSafeOrgName,\n            orgMemberInfo.userAssignedRole,\n            orgMemberInfo.userInheritedRolesPlusCurrentRole,\n            orgMemberInfo.userPermissions\n        )\n    }\n    return orgIdToUserOrgInfo\n}\n","import { AccessHelper, getAccessHelper } from \"./access_helper\"\nimport { OrgIdToOrgMemberInfo } from \"./org\"\nimport { getOrgHelper, OrgHelper } from \"./org_helper\"\nimport { convertOrgIdToOrgMemberInfo, UserClass } from \"./user\"\n\nexport type User = {\n    userId: string\n\n    email: string\n    emailConfirmed: boolean\n\n    hasPassword: boolean\n\n    username?: string\n    firstName?: string\n    lastName?: string\n    pictureUrl?: string\n\n    locked: boolean\n    enabled: boolean\n    mfaEnabled: boolean\n    canCreateOrgs: boolean\n\n    createdAt: number\n    lastActiveAt: number\n\n    legacyUserId?: string\n    properties?: { [key: string]: unknown }\n}\n\nexport type AuthenticationInfo = {\n    accessToken: string\n    expiresAtSeconds: number\n    orgHelper: OrgHelper\n    accessHelper: AccessHelper\n\n    /**\n     * You should prefer orgHelper to orgIdToOrgMemberInfo.\n     * orgHelper provides useful abstractions over this mapping\n     */\n    orgIdToOrgMemberInfo?: OrgIdToOrgMemberInfo\n    user: User\n    userClass: UserClass\n\n    // If someone on your team is impersonating another user, this will be set to the employee's ID\n    // By default, user impersonation is turned off and this will be undefined\n    impersonatorUserId?: string\n}\n\nexport type LogoutResponse = {\n    redirect_to: string\n}\n\nexport function fetchAuthenticationInfo(authUrl: string): Promise<AuthenticationInfo | null> {\n    return fetch(`${authUrl}/api/v1/refresh_token`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => {\n        if (res.status === 401) {\n            return null\n        } else if (res.status === 0) {\n            logCorsError()\n            return Promise.reject({\n                status: 503,\n                message: \"Unable to process authentication response\",\n            })\n        } else if (!res.ok) {\n            return Promise.reject({\n                status: res.status,\n                message: res.statusText,\n            })\n        } else {\n            return parseResponse(res)\n        }\n    })\n}\n\nexport function logout(authUrl: string): Promise<LogoutResponse> {\n    return fetch(`${authUrl}/api/v1/logout`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => {\n        if (res.status === 0) {\n            logCorsError()\n            return Promise.reject({\n                status: 503,\n                message: \"Unable to process authentication response\",\n            })\n        } else if (!res.ok) {\n            console.error(\"Logout error\", res.status, res.statusText)\n            return Promise.reject({\n                status: res.status,\n                message: res.statusText,\n            })\n        } else {\n            return res.json()\n        }\n    })\n}\n\nfunction parseResponse(res: Response): Promise<AuthenticationInfo> {\n    return res.text().then(\n        (httpResponse) => {\n            try {\n                const authInfoWithoutUserClass = parseJsonConvertingSnakeToCamel(httpResponse)\n                return withExtraArgs(authInfoWithoutUserClass)\n            } catch (e) {\n                console.error(\"Unable to process authentication response\", e)\n                return Promise.reject({\n                    status: 500,\n                    message: \"Unable to process authentication response\",\n                })\n            }\n        },\n        (e) => {\n            console.error(\"Unable to process authentication response\", e)\n            return Promise.reject({\n                status: 500,\n                message: \"Unable to process authentication response\",\n            })\n        }\n    )\n}\n\n// The API responds with snake_case, but TypeScript convention is camelCase.\n// When parsing JSON, we pass in reviver function to convert from snake_case to camelCase.\nexport function parseJsonConvertingSnakeToCamel(str: string): AuthenticationInfo {\n    return JSON.parse(str, function (key, value) {\n        if (key === \"org_id\") {\n            this.orgId = value\n        } else if (key === \"org_name\") {\n            this.orgName = value\n        } else if (key === \"url_safe_org_name\") {\n            this.urlSafeOrgName = value\n        } else if (key === \"user_role\") {\n            this.userAssignedRole = value\n        } else if (key === \"inherited_user_roles_plus_current_role\") {\n            this.userInheritedRolesPlusCurrentRole = value\n        } else if (key === \"user_permissions\") {\n            this.userPermissions = value\n        } else if (key === \"access_token\") {\n            this.accessToken = value\n        } else if (key === \"expires_at_seconds\") {\n            this.expiresAtSeconds = value\n        } else if (key === \"org_id_to_org_member_info\") {\n            this.orgIdToOrgMemberInfo = value\n        } else if (key === \"user_id\") {\n            this.userId = value\n        } else if (key === \"email_confirmed\") {\n            this.emailConfirmed = value\n        } else if (key === \"first_name\") {\n            this.firstName = value\n        } else if (key === \"last_name\") {\n            this.lastName = value\n        } else if (key === \"picture_url\") {\n            this.pictureUrl = value\n        } else if (key === \"mfa_enabled\") {\n            this.mfaEnabled = value\n        } else if (key === \"has_password\") {\n            this.hasPassword = value\n        } else if (key === \"can_create_orgs\") {\n            this.canCreateOrgs = value\n        } else if (key === \"created_at\") {\n            this.createdAt = value\n        } else if (key === \"last_active_at\") {\n            this.lastActiveAt = value\n        } else if (key === \"legacy_user_id\") {\n            this.legacyUserId = value\n        } else if (key === \"impersonator_user\") {\n            this.impersonatorUserId = value\n        } else {\n            return value\n        }\n    })\n}\n\nfunction withExtraArgs(authInfoWithoutExtraArgs: AuthenticationInfo): Promise<AuthenticationInfo> {\n    if (authInfoWithoutExtraArgs.orgIdToOrgMemberInfo) {\n        authInfoWithoutExtraArgs.orgHelper = getOrgHelper(authInfoWithoutExtraArgs.orgIdToOrgMemberInfo)\n        authInfoWithoutExtraArgs.accessHelper = getAccessHelper(authInfoWithoutExtraArgs.orgIdToOrgMemberInfo)\n    }\n    authInfoWithoutExtraArgs.userClass = new UserClass(\n        {\n            userId: authInfoWithoutExtraArgs.user.userId,\n            email: authInfoWithoutExtraArgs.user.email,\n            createdAt: authInfoWithoutExtraArgs.user.createdAt,\n            firstName: authInfoWithoutExtraArgs.user.firstName,\n            lastName: authInfoWithoutExtraArgs.user.lastName,\n            username: authInfoWithoutExtraArgs.user.username,\n            properties: authInfoWithoutExtraArgs.user.properties,\n            pictureUrl: authInfoWithoutExtraArgs.user.pictureUrl,\n            hasPassword: authInfoWithoutExtraArgs.user.hasPassword,\n            hasMfaEnabled: authInfoWithoutExtraArgs.user.mfaEnabled,\n            canCreateOrgs: authInfoWithoutExtraArgs.user.canCreateOrgs,\n            legacyUserId: authInfoWithoutExtraArgs.user.legacyUserId,\n            impersonatorUserId: authInfoWithoutExtraArgs.impersonatorUserId,\n        },\n        convertOrgIdToOrgMemberInfo(authInfoWithoutExtraArgs.orgIdToOrgMemberInfo)\n    )\n    return Promise.resolve(authInfoWithoutExtraArgs)\n}\n\nfunction logCorsError() {\n    console.error(\n        \"Request to PropelAuth failed due to a CORS error. There are a few likely causes: \\n\" +\n            \" 1. In the Frontend Integration section of your dashboard, make sure your requests are coming either the specified Application URL or localhost with a matching port.\\n\" +\n            \" 2. Make sure your server is hosted on HTTPS in production.\"\n    )\n}\n","export function currentTimeSeconds() {\n    return Date.now() / 1000\n}\n\nexport function hasLocalStorage(): boolean {\n    return typeof localStorage !== \"undefined\"\n}\n\nexport function hasWindow(): boolean {\n    return typeof window !== \"undefined\"\n}\n\nexport function getLocalStorageNumber(key: string): number | null {\n    if (!hasLocalStorage()) {\n        return null\n    }\n\n    const value = localStorage.getItem(key)\n    if (!value) {\n        return null\n    }\n    const num = parseInt(value, 10)\n    if (Number.isNaN(num)) {\n        return null\n    }\n    return num\n}\n","import { AuthenticationInfo, fetchAuthenticationInfo, logout } from \"./api\"\nimport { currentTimeSeconds, getLocalStorageNumber, hasLocalStorage, hasWindow } from \"./helpers\"\n\nconst LOGGED_IN_AT_KEY = \"__PROPEL_AUTH_LOGGED_IN_AT\"\nconst LOGGED_OUT_AT_KEY = \"__PROPEL_AUTH_LOGGED_OUT_AT\"\nconst AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS = 10 * 60\nconst DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS = 60\n\nexport interface RedirectToSignupOptions {\n    postSignupRedirectUrl: string\n}\n\nexport interface RedirectToLoginOptions {\n    postLoginRedirectUrl: string\n}\n\nexport interface IAuthClient {\n    /**\n     * If the user is logged in, this method returns an access token, the time (in seconds) that the token will expire,\n     * the user's organizations (including org names and user's role within the org), and the user's metadata.\n     * Otherwise, this method returns null.\n     *\n     * The promise will generally resolve immediately, unless our current information is stale in which case it will\n     * make an API request.\n     *\n     * @param forceRefresh If true, this method will always make an API request. Default false\n     */\n    getAuthenticationInfoOrNull(forceRefresh?: boolean): Promise<AuthenticationInfo | null>\n\n    /**\n     * Logs the current user out.\n     * @param redirectAfterLogout If true, will redirect the user to the configured logout URL.\n     */\n    logout(redirectAfterLogout: boolean): Promise<void>\n\n    /**\n     * Gets the URL for the hosted signup page.\n     */\n    getSignupPageUrl(options?: RedirectToSignupOptions): string\n\n    /**\n     * Gets the URL for the hosted login page.\n     */\n    getLoginPageUrl(options?: RedirectToLoginOptions): string\n\n    /**\n     * Gets the URL for the hosted account page.\n     */\n    getAccountPageUrl(): string\n\n    /**\n     * Gets the URL for the hosted organization page.\n     * @param orgId The ID of the organization's page to load. If not specified, a random one will be used instead.\n     */\n    getOrgPageUrl(orgId?: string): string\n\n    /**\n     * Gets the URL for the hosted create organization page.\n     */\n    getCreateOrgPageUrl(): string\n\n    /**\n     * Gets the URL for the hosted SAML configuration page.\n     */\n    getSetupSAMLPageUrl(orgId: string): string\n\n    /**\n     * Redirects the user to the signup page.\n     */\n    redirectToSignupPage(options?: RedirectToSignupOptions): void\n\n    /**\n     * Redirects the user to the login page.\n     */\n    redirectToLoginPage(options?: RedirectToLoginOptions): void\n\n    /**\n     * Redirects the user to the account page.\n     */\n    redirectToAccountPage(): void\n\n    /**\n     * Redirects the user to the organization page.\n     * @param orgId The ID of the organization\"s page to load. If not specified, a random one will be used instead.\n     */\n    redirectToOrgPage(orgId?: string): void\n\n    /**\n     * Redirects the user to the create organization page.\n     */\n    redirectToCreateOrgPage(): void\n\n    /**\n     * Redirects the user to the SAML configuration page.\n     */\n    redirectToSetupSAMLPage(orgId: string): void\n\n    /**\n     * Adds an observer which is called whenever the users logs in or logs out.\n     */\n    addLoggedInChangeObserver(observer: (isLoggedIn: boolean) => void): void\n\n    /**\n     * Removes the observer\n     */\n    removeLoggedInChangeObserver(observer: (isLoggedIn: boolean) => void): void\n\n    /**\n     * Adds an observer which is called whenever the access token changes.\n     */\n    addAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void): void\n\n    /**\n     * Removes the observer\n     */\n    removeAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void): void\n\n    /**\n     * Cleanup the auth client if you no longer need it.\n     */\n    destroy(): void\n}\n\nexport interface IAuthOptions {\n    /**\n     * Base URL where your authentication pages are hosted. See **Frontend Integration** section of your PropelAuth project.\n     */\n    authUrl: string\n\n    /**\n     * If true, periodically refresh the token in the background.\n     * This helps ensure you always have a valid token ready to go when you need it.\n     *\n     * Default true\n     */\n    enableBackgroundTokenRefresh?: boolean\n}\n\ninterface ClientState {\n    initialLoadFinished: boolean\n    authenticationInfo: AuthenticationInfo | null\n    observers: ((isLoggedIn: boolean) => void)[]\n    accessTokenObservers: ((accessToken: string | undefined) => void)[]\n    lastLoggedInAtMessage: number | null\n    lastLoggedOutAtMessage: number | null\n    refreshInterval: number | null\n    lastRefresh: number | null\n    readonly authUrl: string\n}\n\nfunction validateAndCleanupOptions(authOptions: IAuthOptions) {\n    try {\n        // This helps make sure we have a consistent URL ignoring things like trailing slashes\n        const authUrl = new URL(authOptions.authUrl)\n        authOptions.authUrl = authUrl.origin\n    } catch (e) {\n        console.error(\"Invalid authUrl\", e)\n        throw new Error(\"Unable to initialize auth client\")\n    }\n\n    if (authOptions.enableBackgroundTokenRefresh === undefined) {\n        authOptions.enableBackgroundTokenRefresh = true\n    }\n}\n\nexport function createClient(authOptions: IAuthOptions): IAuthClient {\n    validateAndCleanupOptions(authOptions)\n\n    // Internal state\n    const clientState: ClientState = {\n        initialLoadFinished: false,\n        authenticationInfo: null,\n        observers: [],\n        accessTokenObservers: [],\n        lastLoggedInAtMessage: getLocalStorageNumber(LOGGED_IN_AT_KEY),\n        lastLoggedOutAtMessage: getLocalStorageNumber(LOGGED_OUT_AT_KEY),\n        authUrl: authOptions.authUrl,\n        refreshInterval: null,\n        lastRefresh: null,\n    }\n\n    // Helper functions\n    function notifyObservers(isLoggedIn: boolean) {\n        for (let i = 0; i < clientState.observers.length; i++) {\n            const observer = clientState.observers[i]\n            if (observer) {\n                observer(isLoggedIn)\n            }\n        }\n    }\n\n    function notifyObserversOfAccessTokenChange(accessToken: string | undefined) {\n        for (let i = 0; i < clientState.accessTokenObservers.length; i++) {\n            const observer = clientState.accessTokenObservers[i]\n            if (observer) {\n                observer(accessToken)\n            }\n        }\n    }\n\n    function userJustLoggedOut(accessToken: string | undefined, previousAccessToken: string | undefined) {\n        // Edge case: the first time we go to the page, if we can't load the\n        //   auth token we should treat it as a logout event\n        return !accessToken && (previousAccessToken || !clientState.initialLoadFinished)\n    }\n\n    function userJustLoggedIn(accessToken: string | undefined, previousAccessToken: string | undefined) {\n        return !previousAccessToken && accessToken\n    }\n\n    function updateLastLoggedOutAt() {\n        const loggedOutAt = currentTimeSeconds()\n        clientState.lastLoggedOutAtMessage = loggedOutAt\n        if (hasLocalStorage()) {\n            localStorage.setItem(LOGGED_OUT_AT_KEY, String(loggedOutAt))\n        }\n    }\n\n    function updateLastLoggedInAt() {\n        const loggedInAt = currentTimeSeconds()\n        clientState.lastLoggedInAtMessage = loggedInAt\n        if (hasLocalStorage()) {\n            localStorage.setItem(LOGGED_IN_AT_KEY, String(loggedInAt))\n        }\n    }\n\n    function setAuthenticationInfoAndUpdateDownstream(authenticationInfo: AuthenticationInfo | null) {\n        const previousAccessToken = clientState.authenticationInfo?.accessToken\n        clientState.authenticationInfo = authenticationInfo\n        const accessToken = authenticationInfo?.accessToken\n\n        if (userJustLoggedOut(accessToken, previousAccessToken)) {\n            notifyObservers(false)\n            updateLastLoggedOutAt()\n        } else if (userJustLoggedIn(accessToken, previousAccessToken)) {\n            notifyObservers(true)\n            updateLastLoggedInAt()\n        }\n\n        if (previousAccessToken !== accessToken) {\n            notifyObserversOfAccessTokenChange(accessToken)\n        }\n\n        clientState.lastRefresh = currentTimeSeconds()\n        clientState.initialLoadFinished = true\n    }\n\n    async function forceRefreshToken(returnCached: boolean): Promise<AuthenticationInfo | null> {\n        try {\n            // Happy case, we fetch auth info and save it\n            const authenticationInfo = await fetchAuthenticationInfo(clientState.authUrl)\n            setAuthenticationInfoAndUpdateDownstream(authenticationInfo)\n            return authenticationInfo\n        } catch (e) {\n            // If there was an error, we sometimes still want to return the value we have cached\n            //   (e.g. if we were prefetching), so in those cases we swallow the exception\n            if (returnCached) {\n                return clientState.authenticationInfo\n            } else {\n                setAuthenticationInfoAndUpdateDownstream(null)\n                throw e\n            }\n        }\n    }\n\n    const getSignupPageUrl = (options?: RedirectToSignupOptions) => {\n        let qs = \"\"\n        if (options && options.postSignupRedirectUrl) {\n            const encode = window ? window.btoa : btoa\n            qs = new URLSearchParams({ rt: encode(options.postSignupRedirectUrl) }).toString()\n        }\n        return `${clientState.authUrl}/signup?${qs}`\n    }\n\n    const getLoginPageUrl = (options?: RedirectToLoginOptions) => {\n        let qs = \"\"\n        if (options && options.postLoginRedirectUrl) {\n            const encode = window ? window.btoa : btoa\n            qs = new URLSearchParams({ rt: encode(options.postLoginRedirectUrl) }).toString()\n        }\n        return `${clientState.authUrl}/login?${qs}`\n    }\n\n    const getAccountPageUrl = () => {\n        return `${clientState.authUrl}/account`\n    }\n\n    const getOrgPageUrl = (orgId?: string) => {\n        if (orgId) {\n            return `${clientState.authUrl}/org?id=${orgId}`\n        } else {\n            return `${clientState.authUrl}/org`\n        }\n    }\n\n    const getCreateOrgPageUrl = () => {\n        return `${clientState.authUrl}/create_org`\n    }\n\n    const getSetupSAMLPageUrl = (orgId: string) => {\n        return `${clientState.authUrl}/saml?id=${orgId}`\n    }\n\n    const client = {\n        addLoggedInChangeObserver(loggedInChangeObserver: (isLoggedIn: boolean) => void): void {\n            const hasObserver = clientState.observers.includes(loggedInChangeObserver)\n            if (hasObserver) {\n                console.error(\"Observer has been attached already.\")\n            } else if (!loggedInChangeObserver) {\n                console.error(\"Cannot add a null observer\")\n            } else {\n                clientState.observers.push(loggedInChangeObserver)\n            }\n        },\n\n        removeLoggedInChangeObserver(loggedInChangeObserver: (isLoggedIn: boolean) => void): void {\n            const observerIndex = clientState.observers.indexOf(loggedInChangeObserver)\n            if (observerIndex === -1) {\n                console.error(\"Cannot find observer to remove\")\n            } else {\n                clientState.observers.splice(observerIndex, 1)\n            }\n        },\n\n        addAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void) {\n            const hasObserver = clientState.accessTokenObservers.includes(observer)\n            if (hasObserver) {\n                console.error(\"Observer has been attached already.\")\n            } else if (!observer) {\n                console.error(\"Cannot add a null observer\")\n            } else {\n                clientState.accessTokenObservers.push(observer)\n            }\n        },\n\n        removeAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void) {\n            const observerIndex = clientState.accessTokenObservers.indexOf(observer)\n            if (observerIndex === -1) {\n                console.error(\"Cannot find observer to remove\")\n            } else {\n                clientState.accessTokenObservers.splice(observerIndex, 1)\n            }\n        },\n\n        async getAuthenticationInfoOrNull(forceRefresh?: boolean): Promise<AuthenticationInfo | null> {\n            const currentTimeSecs = currentTimeSeconds()\n            if (forceRefresh) {\n                return await forceRefreshToken(false)\n            } else if (!clientState.authenticationInfo) {\n                return await forceRefreshToken(false)\n            } else if (\n                currentTimeSecs + AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS >\n                clientState.authenticationInfo.expiresAtSeconds\n            ) {\n                // Small edge case: If we were being proactive\n                //   and the auth information hasn't expired yet, swallow any exceptions\n                const returnCached = currentTimeSecs < clientState.authenticationInfo.expiresAtSeconds\n                return await forceRefreshToken(returnCached)\n            } else {\n                return clientState.authenticationInfo\n            }\n        },\n\n        getSignupPageUrl(options?: RedirectToSignupOptions): string {\n            return getSignupPageUrl(options)\n        },\n\n        getLoginPageUrl(options?: RedirectToLoginOptions): string {\n            return getLoginPageUrl(options)\n        },\n\n        getAccountPageUrl(): string {\n            return getAccountPageUrl()\n        },\n\n        getOrgPageUrl(orgId?: string): string {\n            return getOrgPageUrl(orgId)\n        },\n\n        getCreateOrgPageUrl(): string {\n            return getCreateOrgPageUrl()\n        },\n\n        getSetupSAMLPageUrl(orgId: string): string {\n            return getSetupSAMLPageUrl(orgId)\n        },\n\n        redirectToSignupPage(options?: RedirectToSignupOptions): void {\n            window.location.href = getSignupPageUrl(options)\n        },\n\n        redirectToLoginPage(options?: RedirectToLoginOptions): void {\n            window.location.href = getLoginPageUrl(options)\n        },\n\n        redirectToAccountPage(): void {\n            window.location.href = getAccountPageUrl()\n        },\n\n        redirectToOrgPage(orgId?: string): void {\n            window.location.href = getOrgPageUrl(orgId)\n        },\n\n        redirectToCreateOrgPage(): void {\n            window.location.href = getCreateOrgPageUrl()\n        },\n\n        redirectToSetupSAMLPage(orgId: string) {\n            window.location.href = getSetupSAMLPageUrl(orgId)\n        },\n\n        async logout(redirectAfterLogout: boolean): Promise<void> {\n            const logoutResponse = await logout(clientState.authUrl)\n            setAuthenticationInfoAndUpdateDownstream(null)\n            if (redirectAfterLogout) {\n                window.location.href = logoutResponse.redirect_to\n            }\n        },\n\n        destroy() {\n            clientState.observers = []\n            clientState.accessTokenObservers = []\n            window.removeEventListener(\"storage\", onStorageChange)\n            if (clientState.refreshInterval) {\n                clearInterval(clientState.refreshInterval)\n            }\n        },\n    }\n\n    const onStorageChange = async function () {\n        // If localStorage isn't available, nothing to do here.\n        // This usually happens in frameworks that have some SSR components\n        if (!hasLocalStorage()) {\n            return\n        }\n\n        const loggedOutAt = getLocalStorageNumber(LOGGED_OUT_AT_KEY)\n        const loggedInAt = getLocalStorageNumber(LOGGED_IN_AT_KEY)\n\n        // If we've detected a logout event after the last one our client is aware of, trigger a refresh\n        if (loggedOutAt && (!clientState.lastLoggedOutAtMessage || loggedOutAt > clientState.lastLoggedOutAtMessage)) {\n            clientState.lastLoggedOutAtMessage = loggedOutAt\n            if (clientState.authenticationInfo) {\n                await forceRefreshToken(true)\n            }\n        }\n\n        // If we've detected a login event after the last one our client is aware of, trigger a refresh\n        if (loggedInAt && (!clientState.lastLoggedInAtMessage || loggedInAt > clientState.lastLoggedInAtMessage)) {\n            clientState.lastLoggedInAtMessage = loggedInAt\n            if (!clientState.authenticationInfo) {\n                await forceRefreshToken(true)\n            }\n        }\n    }\n\n    // If we were offline or on a different tab, when we return, refetch auth info\n    // Some browsers trigger focus more often than we'd like, so we'll debounce a little here as well\n    const onOnlineOrFocus = async function () {\n        if (\n            clientState.lastRefresh &&\n            currentTimeSeconds() > clientState.lastRefresh + DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS\n        ) {\n            await forceRefreshToken(true)\n        } else {\n            await client.getAuthenticationInfoOrNull()\n        }\n    }\n\n    if (hasWindow()) {\n        window.addEventListener(\"storage\", onStorageChange)\n        window.addEventListener(\"online\", onOnlineOrFocus)\n        window.addEventListener(\"focus\", onOnlineOrFocus)\n\n        if (authOptions.enableBackgroundTokenRefresh) {\n            client.getAuthenticationInfoOrNull()\n            clientState.refreshInterval = window.setInterval(client.getAuthenticationInfoOrNull, 60000)\n        }\n    }\n\n    return client\n}\n","export const ACTIVE_ORG_ID_COOKIE_NAME = \"active_org_id\"\n","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import Cookies from \"js-cookie\"\nimport { ACTIVE_ORG_ID_COOKIE_NAME } from \"./cookies\"\n\nexport type OrgMemberInfo = {\n    orgId: string\n    orgName: string\n    urlSafeOrgName: string\n    userAssignedRole: string\n    userInheritedRolesPlusCurrentRole: string[]\n    userPermissions: string[]\n}\nexport type OrgIdToOrgMemberInfo = {\n    [orgId: string]: OrgMemberInfo\n}\n\nexport const setActiveOrgId = (orgId: string) => {\n    Cookies.set(ACTIVE_ORG_ID_COOKIE_NAME, orgId, {\n        sameSite: \"lax\",\n        secure: true,\n    })\n}\n\nexport const getActiveOrgId = (): string | undefined => {\n    return Cookies.get(ACTIVE_ORG_ID_COOKIE_NAME)\n}\n"],"names":["getAccessHelper","orgIdToOrgMemberInfo","isRole","orgId","role","orgMemberInfo","undefined","userAssignedRole","isAtLeastRole","userInheritedRolesPlusCurrentRole","includes","hasPermission","permission","userPermissions","hasAllPermissions","permissions","every","getAccessHelperWithOrgId","getOrgHelper","getOrg","hasOwnProperty","getOrgIds","Object","keys","getOrgs","values","getOrgByName","orgName","urlSafeOrgName","UserClass","constructor","userFields","orgIdToUserOrgInfo","userId","email","firstName","lastName","username","createdAt","pictureUrl","hasPassword","hasMfaEnabled","canCreateOrgs","legacyUserId","impersonatorUserId","properties","toLowerCase","replace","getUserProperty","key","isImpersonating","fromJSON","json","obj","JSON","parse","OrgMemberInfoClass","stringify","e","console","error","orgMetadata","convertOrgIdToOrgMemberInfo","fetchAuthenticationInfo","authUrl","fetch","method","credentials","headers","then","res","status","logCorsError","Promise","reject","message","ok","statusText","parseResponse","logout","text","httpResponse","authInfoWithoutUserClass","parseJsonConvertingSnakeToCamel","withExtraArgs","str","value","accessToken","expiresAtSeconds","emailConfirmed","mfaEnabled","lastActiveAt","authInfoWithoutExtraArgs","orgHelper","accessHelper","userClass","user","resolve","currentTimeSeconds","Date","now","hasLocalStorage","localStorage","hasWindow","window","getLocalStorageNumber","getItem","num","parseInt","Number","isNaN","LOGGED_IN_AT_KEY","LOGGED_OUT_AT_KEY","AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS","DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS","validateAndCleanupOptions","authOptions","URL","origin","Error","enableBackgroundTokenRefresh","createClient","clientState","initialLoadFinished","authenticationInfo","observers","accessTokenObservers","lastLoggedInAtMessage","lastLoggedOutAtMessage","refreshInterval","lastRefresh","notifyObservers","isLoggedIn","i","length","observer","notifyObserversOfAccessTokenChange","userJustLoggedOut","previousAccessToken","userJustLoggedIn","updateLastLoggedOutAt","loggedOutAt","setItem","String","updateLastLoggedInAt","loggedInAt","setAuthenticationInfoAndUpdateDownstream","_clientState$authenti","forceRefreshToken","returnCached","getSignupPageUrl","options","qs","postSignupRedirectUrl","encode","btoa","URLSearchParams","rt","toString","getLoginPageUrl","postLoginRedirectUrl","getAccountPageUrl","getOrgPageUrl","getCreateOrgPageUrl","getSetupSAMLPageUrl","client","addLoggedInChangeObserver","loggedInChangeObserver","hasObserver","push","removeLoggedInChangeObserver","observerIndex","indexOf","splice","addAccessTokenChangeObserver","removeAccessTokenChangeObserver","getAuthenticationInfoOrNull","forceRefresh","currentTimeSecs","redirectToSignupPage","location","href","redirectToLoginPage","redirectToAccountPage","redirectToOrgPage","redirectToCreateOrgPage","redirectToSetupSAMLPage","redirectAfterLogout","logoutResponse","redirect_to","destroy","removeEventListener","onStorageChange","clearInterval","onOnlineOrFocus","addEventListener","setInterval","ACTIVE_ORG_ID_COOKIE_NAME","setActiveOrgId","Cookies","set","sameSite","secure","getActiveOrgId","get"],"mappings":"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"}