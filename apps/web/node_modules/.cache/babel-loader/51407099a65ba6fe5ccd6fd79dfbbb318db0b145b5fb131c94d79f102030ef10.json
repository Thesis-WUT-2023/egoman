{"ast":null,"code":"// import { useState, useEffect, useContext } from \"react\";\n// import logo from \"../static/logo.png\"\n// import { useNavigate } from \"react-router-dom\";\n// import Cookies from \"js-cookie\";\n\n// export const validateValues = (inputValues) => {\n//   var validRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n//   let errors = {};\n\n//   if (!inputValues.name)\n//     errors.name = \"Name is required\";\n//   if (!inputValues.surname)\n//     errors.surname = \"Surname is required\";\n\n//   if (!inputValues.email)\n//     errors.email = \"Email is required\";\n//   else if (!validRegex.test(inputValues.email)) {\n//     errors.email = \"Invalid Email\";\n//   }\n\n//   if (!inputValues.password)\n//     errors.password = \"Password is required\";\n//   else if (inputValues.password.length < 8) {\n//     errors.password = \"Password is short\";\n//   }\n//   if (!inputValues.repassword)\n//     errors.repassword = \"Verify the password\";\n//   else if (inputValues.password !== inputValues.repassword) {\n//     errors.repassword = \"Passwords do not match\";\n//   }\n\n//   return errors;\n// };\n\n// export default function SignUp() {\n//   const navigate = useNavigate();\n//   const [inputFields, setInputFields] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     password: \"\",\n//     repassword: \"\",\n//   });\n//   const [errors, setErrors] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     password: \"\",\n//     repassword: \"\",\n//   });\n//   const [formError, setFormError] = useState(null);\n//   const [submitting, setSubmitting] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setInputFields({ ...inputFields, [name]: value });\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     setErrors(validateValues(inputFields))\n//     setSubmitting(true);\n//   };\n\n//   const finishSubmit = () => {\n//     console.log(inputFields);\n//     Signup();\n//   };\n//   useEffect(() => {\n//     if (Object.keys(errors).length === 0 && submitting) {\n//       finishSubmit();\n//     }\n//   }, [errors]);\n\n//   const Signup = async () => {\n//     const requestOptions = {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({\n//         email: inputFields.email,\n//         password: inputFields.password,\n//         name: inputFields.name,\n//         surname: inputFields.surname\n//       }),\n//     };\n\n//     const response = await fetch(\"http://localhost:3000/auth/signup\", requestOptions);\n//     const data = await response.json();\n\n//     if (!response.ok) {\n//       setFormError(\"User already Exists\");\n//     } else {\n//       Cookies.set(\"token\", data.token);\n//       Cookies.set(\"authenticated\", true);\n//       navigate(\"/Model\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <h1 className=\"h1\">Sign Up</h1>\n//       <hr className=\"hr\"></hr>\n//       <div className=\"form\">\n\n//         <form onSubmit={handleSubmit}>\n//           <img src={logo} id=\"logo-form\" alt=\"Egoman-Logo\"></img>\n//           <div className=\"form-inputs-container\">\n//             <br />\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"text\" name=\"name\" className=\"input\" value={inputFields.name} onChange={handleChange} />\n//                 <label className=\"label\">Name</label>\n//               </div>\n//               <label className=\"error\">{errors.name}</label>\n//             </div>\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"text\" name=\"surname\" className=\"input\" value={inputFields.surname} onChange={handleChange} />\n//                 <label className=\"label\">Surname</label>\n//               </div>\n//               <label className=\"error\">{errors.surname}</label>\n//             </div>\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"text\" name=\"email\"\n//                   className=\"input\" value={inputFields.email} onChange={handleChange} />\n//                 <label className=\"label\">Email</label>\n//               </div>\n//               <label className=\"error\">{errors.email}</label>\n//             </div>\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"password\" name=\"password\"\n//                   className=\"input\" value={inputFields.password} onChange={handleChange} />\n//                 <label className=\"label\">Password</label>\n//               </div>\n//               <label className=\"error\">{errors.password}</label>\n//             </div>\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n\n//                 <input type=\"password\" name=\"repassword\"\n//                   className=\"input\" value={inputFields.repassword} onChange={handleChange} />\n//                 <label className=\"label\">Repeat Password</label>\n//               </div>\n//               <label className=\"error\">{errors.repassword}</label>\n//             </div>\n//           </div>\n//           <br />\n//           <div className=\"form-error-container\">\n//             <label className=\"form-error\">{formError}</label>\n//           </div>\n//           <div className=\"button-container\">\n//             <input type=\"submit\" className=\"button-5\" value=\"Sign Up\" />\n//           </div>\n//         </form>\n//         <label>Have an account? </label>\n//         <a id=\"link\" href=\"/SignIn\"> Sign In</a>\n//       </div>\n//     </>\n//   )\n\n// }","map":{"version":3,"names":[],"sources":["/home/rayan/Desktop/egoman/apps/web/frontend/src/pages/SignUp.jsx"],"sourcesContent":["// import { useState, useEffect, useContext } from \"react\";\n// import logo from \"../static/logo.png\"\n// import { useNavigate } from \"react-router-dom\";\n// import Cookies from \"js-cookie\";\n\n// export const validateValues = (inputValues) => {\n//   var validRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n//   let errors = {};\n\n//   if (!inputValues.name)\n//     errors.name = \"Name is required\";\n//   if (!inputValues.surname)\n//     errors.surname = \"Surname is required\";\n\n//   if (!inputValues.email)\n//     errors.email = \"Email is required\";\n//   else if (!validRegex.test(inputValues.email)) {\n//     errors.email = \"Invalid Email\";\n//   }\n\n//   if (!inputValues.password)\n//     errors.password = \"Password is required\";\n//   else if (inputValues.password.length < 8) {\n//     errors.password = \"Password is short\";\n//   }\n//   if (!inputValues.repassword)\n//     errors.repassword = \"Verify the password\";\n//   else if (inputValues.password !== inputValues.repassword) {\n//     errors.repassword = \"Passwords do not match\";\n//   }\n\n//   return errors;\n// };\n\n\n// export default function SignUp() {\n//   const navigate = useNavigate();\n//   const [inputFields, setInputFields] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     password: \"\",\n//     repassword: \"\",\n//   });\n//   const [errors, setErrors] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     password: \"\",\n//     repassword: \"\",\n//   });\n//   const [formError, setFormError] = useState(null);\n//   const [submitting, setSubmitting] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setInputFields({ ...inputFields, [name]: value });\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     setErrors(validateValues(inputFields))\n//     setSubmitting(true);\n//   };\n\n//   const finishSubmit = () => {\n//     console.log(inputFields);\n//     Signup();\n//   };\n//   useEffect(() => {\n//     if (Object.keys(errors).length === 0 && submitting) {\n//       finishSubmit();\n//     }\n//   }, [errors]);\n\n//   const Signup = async () => {\n//     const requestOptions = {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({\n//         email: inputFields.email,\n//         password: inputFields.password,\n//         name: inputFields.name,\n//         surname: inputFields.surname\n//       }),\n//     };\n\n//     const response = await fetch(\"http://localhost:3000/auth/signup\", requestOptions);\n//     const data = await response.json();\n\n//     if (!response.ok) {\n//       setFormError(\"User already Exists\");\n//     } else {\n//       Cookies.set(\"token\", data.token);\n//       Cookies.set(\"authenticated\", true);\n//       navigate(\"/Model\");\n//     }\n//   };\n\n\n//   return (\n//     <>\n//       <h1 className=\"h1\">Sign Up</h1>\n//       <hr className=\"hr\"></hr>\n//       <div className=\"form\">\n\n//         <form onSubmit={handleSubmit}>\n//           <img src={logo} id=\"logo-form\" alt=\"Egoman-Logo\"></img>\n//           <div className=\"form-inputs-container\">\n//             <br />\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"text\" name=\"name\" className=\"input\" value={inputFields.name} onChange={handleChange} />\n//                 <label className=\"label\">Name</label>\n//               </div>\n//               <label className=\"error\">{errors.name}</label>\n//             </div>\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"text\" name=\"surname\" className=\"input\" value={inputFields.surname} onChange={handleChange} />\n//                 <label className=\"label\">Surname</label>\n//               </div>\n//               <label className=\"error\">{errors.surname}</label>\n//             </div>\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"text\" name=\"email\"\n//                   className=\"input\" value={inputFields.email} onChange={handleChange} />\n//                 <label className=\"label\">Email</label>\n//               </div>\n//               <label className=\"error\">{errors.email}</label>\n//             </div>\n\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n//                 <input type=\"password\" name=\"password\"\n//                   className=\"input\" value={inputFields.password} onChange={handleChange} />\n//                 <label className=\"label\">Password</label>\n//               </div>\n//               <label className=\"error\">{errors.password}</label>\n//             </div>\n//             <div className=\"input-error-container\">\n//               <div className=\"input-label-container\">\n\n//                 <input type=\"password\" name=\"repassword\"\n//                   className=\"input\" value={inputFields.repassword} onChange={handleChange} />\n//                 <label className=\"label\">Repeat Password</label>\n//               </div>\n//               <label className=\"error\">{errors.repassword}</label>\n//             </div>\n//           </div>\n//           <br />\n//           <div className=\"form-error-container\">\n//             <label className=\"form-error\">{formError}</label>\n//           </div>\n//           <div className=\"button-container\">\n//             <input type=\"submit\" className=\"button-5\" value=\"Sign Up\" />\n//           </div>\n//         </form>\n//         <label>Have an account? </label>\n//         <a id=\"link\" href=\"/SignIn\"> Sign In</a>\n//       </div>\n//     </>\n//   )\n\n// }\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}