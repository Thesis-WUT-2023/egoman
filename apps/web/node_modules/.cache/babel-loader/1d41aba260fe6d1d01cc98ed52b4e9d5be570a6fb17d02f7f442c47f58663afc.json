{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return null;\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: stackingGroups.flatMap(({\n      ids: groupIds\n    }) => {\n      return groupIds.flatMap(seriesId => {\n        var _xData$map;\n        const {\n          xAxisKey = defaultXAxisId,\n          yAxisKey = defaultYAxisId,\n          stackedData,\n          data,\n          connectNulls\n        } = series[seriesId];\n        const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n        const yScale = yAxis[yAxisKey].scale;\n        const xData = xAxis[xAxisKey].data;\n        if (process.env.NODE_ENV !== 'production') {\n          if (xData === undefined) {\n            throw new Error(`Axis of id \"${xAxisKey}\" should have data property to be able to display a line plot.`);\n          }\n          if (xData.length < stackedData.length) {\n            throw new Error(`MUI: data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items)`);\n          }\n        }\n        const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n        const curve = getCurveFactory(series[seriesId].curve);\n        const formattedData = (_xData$map = xData == null ? void 0 : xData.map((x, index) => ({\n          x,\n          y: stackedData[index]\n        }))) != null ? _xData$map : [];\n        const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n        return !!series[seriesId].area && /*#__PURE__*/_jsx(AreaElement, {\n          id: seriesId,\n          d: areaPath.curve(curve)(d3Data) || undefined,\n          color: series[seriesId].color,\n          highlightScope: series[seriesId].highlightScope,\n          slots: slots,\n          slotProps: slotProps\n        }, seriesId);\n      });\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","area","d3Area","SeriesContext","CartesianContext","AreaElement","getValueToPositionMapper","getCurveFactory","jsx","_jsx","AreaPlot","props","slots","slotProps","other","seriesData","useContext","line","axisData","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","children","flatMap","ids","groupIds","seriesId","_xData$map","xAxisKey","yAxisKey","stackedData","data","connectNulls","xScale","scale","yScale","xData","process","env","NODE_ENV","Error","length","areaPath","x","d","defined","_","i","y0","y","y1","curve","formattedData","map","index","d3Data","filter","id","color","highlightScope","propTypes","object"],"sources":["/home/rayan/Desktop/egoman/apps/web/node_modules/@mui/x-charts/esm/LineChart/AreaPlot.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return null;\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: stackingGroups.flatMap(({\n      ids: groupIds\n    }) => {\n      return groupIds.flatMap(seriesId => {\n        var _xData$map;\n        const {\n          xAxisKey = defaultXAxisId,\n          yAxisKey = defaultYAxisId,\n          stackedData,\n          data,\n          connectNulls\n        } = series[seriesId];\n        const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n        const yScale = yAxis[yAxisKey].scale;\n        const xData = xAxis[xAxisKey].data;\n        if (process.env.NODE_ENV !== 'production') {\n          if (xData === undefined) {\n            throw new Error(`Axis of id \"${xAxisKey}\" should have data property to be able to display a line plot.`);\n          }\n          if (xData.length < stackedData.length) {\n            throw new Error(`MUI: data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items)`);\n          }\n        }\n        const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n        const curve = getCurveFactory(series[seriesId].curve);\n        const formattedData = (_xData$map = xData == null ? void 0 : xData.map((x, index) => ({\n          x,\n          y: stackedData[index]\n        }))) != null ? _xData$map : [];\n        const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n        return !!series[seriesId].area && /*#__PURE__*/_jsx(AreaElement, {\n          id: seriesId,\n          d: areaPath.curve(curve)(d3Data) || undefined,\n          color: series[seriesId].color,\n          highlightScope: series[seriesId].highlightScope,\n          slots: slots,\n          slotProps: slotProps\n        }, seriesId);\n      });\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}