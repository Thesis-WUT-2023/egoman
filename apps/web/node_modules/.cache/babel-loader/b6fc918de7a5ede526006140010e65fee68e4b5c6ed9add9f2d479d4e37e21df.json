{"ast":null,"code":"import Cookies from 'js-cookie';\nconst GetCurrentUser = async () => {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Bearer ' + Cookies.get(\"token\").toString()\n    }\n  };\n  const response = await fetch(\"http://localhost:3000/users/current\", requestOptions);\n  const data = await response.json();\n\n  // setInputFields(data);\n  return data;\n};\n\n// export default GetCurrentUser;\n_c = GetCurrentUser;\nconst DeleteAccount = async () => {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': 'Bearer ' + Cookies.get(\"token\").toString()\n    }\n  };\n  const response = await fetch(\"http://localhost:3000/users/current\", requestOptions);\n  const data = await response.json();\n  if (response.ok) {\n    Cookies.set(\"authenticated\", false);\n    Cookies.set(\"token\", \"\");\n    Cookies.set(\"email\", false);\n    Cookies.set(\"name\", \"\");\n    Cookies.set(\"surname\", \"\");\n    navigate(\"/SignIn\");\n  }\n};\n_c2 = DeleteAccount;\nmodule.exports = {\n  GetCurrentUser: GetCurrentUser,\n  DeleteAccount: DeleteAccount\n};\n// const UpdateAccount = async () => {\n//     const requestOptions = {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + Cookies.get(\"token\").toString() },\n//         body: JSON.stringify({\n//             new_name: inputFields.name,\n//             new_surname: inputFields.surname\n//         })\n//     };\n//     const response = await fetch(\"http://localhost:3000/users/update/settings\", requestOptions);\n//     const data = await response.json();\n\n//     if (!response.ok) {\n//         setFormMessage(\"Error\");\n//     }\n//     else {\n//         setFormMessage(\"Name has been updated\")\n//     }\n// }\nvar _c, _c2;\n$RefreshReg$(_c, \"GetCurrentUser\");\n$RefreshReg$(_c2, \"DeleteAccount\");","map":{"version":3,"names":["Cookies","GetCurrentUser","requestOptions","method","headers","get","toString","response","fetch","data","json","_c","DeleteAccount","ok","set","navigate","_c2","module","exports","$RefreshReg$"],"sources":["/home/rayan/Desktop/egoman/apps/web/src/api.js"],"sourcesContent":["import Cookies from 'js-cookie';\n\n\n\n\n\n\nconst GetCurrentUser = async () => {\n    \n    const requestOptions = {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + Cookies.get(\"token\").toString() },\n    };\n    const response = await fetch(\"http://localhost:3000/users/current\", requestOptions);\n    const data = await response.json();\n\n    // setInputFields(data);\n    return data;\n}\n\n// export default GetCurrentUser;\n\n\nconst DeleteAccount = async () => {\n    const requestOptions = {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + Cookies.get(\"token\").toString() },\n    };\n    const response = await fetch(\"http://localhost:3000/users/current\", requestOptions);\n    const data = await response.json();\n\n    if (response.ok) {\n        Cookies.set(\"authenticated\", false);\n        Cookies.set(\"token\", \"\");\n        Cookies.set(\"email\", false);\n        Cookies.set(\"name\", \"\");\n        Cookies.set(\"surname\", \"\");\n\n        navigate(\"/SignIn\");\n    }\n}\n\nmodule.exports = {\n    GetCurrentUser: GetCurrentUser,\n    DeleteAccount: DeleteAccount,\n}\n// const UpdateAccount = async () => {\n//     const requestOptions = {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + Cookies.get(\"token\").toString() },\n//         body: JSON.stringify({\n//             new_name: inputFields.name,\n//             new_surname: inputFields.surname\n//         })\n//     };\n//     const response = await fetch(\"http://localhost:3000/users/update/settings\", requestOptions);\n//     const data = await response.json();\n\n//     if (!response.ok) {\n//         setFormMessage(\"Error\");\n//     }\n//     else {\n//         setFormMessage(\"Name has been updated\")\n//     }\n// }"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAO/B,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EAE/B,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,SAAS,GAAGJ,OAAO,CAACK,GAAG,CAAC,OAAO,CAAC,CAACC,QAAQ,CAAC;IAAE;EAChH,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAEN,cAAc,CAAC;EACnF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;EAElC;EACA,OAAOD,IAAI;AACf,CAAC;;AAED;AAAAE,EAAA,GAbMV,cAAc;AAgBpB,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMV,cAAc,GAAG;IACnBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,SAAS,GAAGJ,OAAO,CAACK,GAAG,CAAC,OAAO,CAAC,CAACC,QAAQ,CAAC;IAAE;EAChH,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAEN,cAAc,CAAC;EACnF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAElC,IAAIH,QAAQ,CAACM,EAAE,EAAE;IACbb,OAAO,CAACc,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC;IACnCd,OAAO,CAACc,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;IACxBd,OAAO,CAACc,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;IAC3Bd,OAAO,CAACc,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;IACvBd,OAAO,CAACc,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC;IAE1BC,QAAQ,CAAC,SAAS,CAAC;EACvB;AACJ,CAAC;AAAAC,GAAA,GAjBKJ,aAAa;AAmBnBK,MAAM,CAACC,OAAO,GAAG;EACbjB,cAAc,EAAEA,cAAc;EAC9BW,aAAa,EAAEA;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAG,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}